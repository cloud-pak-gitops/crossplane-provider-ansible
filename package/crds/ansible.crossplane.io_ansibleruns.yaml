---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: ansibleruns.ansible.crossplane.io
spec:
  group: ansible.crossplane.io
  names:
    kind: AnsibleRun
    listKind: AnsibleRunList
    plural: ansibleruns
    singular: ansiblerun
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AnsibleRun represents a set of Ansible Playbooks.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A AnsibleRunSpec defines the desired state of a AnsibleRun.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: AnsibleRunParameters are the configurable fields of a
                  AnsibleRun.
                properties:
                  module:
                    description: The configuration of this AnsibleRun; i.e. the configuration
                      containing its playbook(s)/Role(s) files. When the AnsibleRun's
                      Provider source is 'Remote' (the default) this can be any address
                      supported by Ansible.Builtin.git, TODO support other remotes
                      https://docs.ansible.com/ansible/latest/collections/ansible/builtin/index.html
                      When the AnsibleRun's source is 'Inline' the content of a simple
                      playbook.yml file may be written inline.
                    type: string
                  playbook:
                    description: This is the playbook name. This playbook is expected
                      to be simply a way to call roles. This field is mutually exclusive
                      with the “role” field. For remote source, the playbook is expected
                      to be in the remote project directory. this filed has non effect
                      on inline mode
                    type: string
                  role:
                    description: 'Specifies a role to be executed. This field is mutually
                      exclusive with the “playbook” field. For remote source This
                      field can be: - a relative path within the project working directory
                      - a relative path within one of the directories specified by
                      ANSIBLE_ROLES_PATH environment variable or ansible-roles-path
                      flag. this filed has non effect on inline mode'
                    type: string
                  source:
                    description: Source of configuration of this AnsibleRun.
                    enum:
                    - Remote
                    - Inline
                    type: string
                  vars:
                    description: Configuration variables.
                    items:
                      description: A Var represents an Ansible configuration variable.
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                required:
                - module
                - source
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A AnsibleRunStatus represents the observed state of a AnsibleRun.
            properties:
              atProvider:
                description: AnsibleRunObservation are the observable fields of a
                  AnsibleRun.
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
